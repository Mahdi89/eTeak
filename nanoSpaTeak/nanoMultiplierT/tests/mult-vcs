#! /bin/sh
# ******** Simple balsa adder simulation script ***********
# Author: Luis Tarazona tarazonl@cs.man.ac.uk
# (adapted from original script by Luis Plana) 
# last update: 12/08/2008
#----------------------------------------------------------
# this script runs a verilog simulation of the device "dev" (a verilog netlist)
# using the testbench HARNESS and the technology "tech"
# Usage: script_name [DEV dev] [SR] [TECH tech] [DUMPVARS n]
# where:
#   dev    : .v verilog netlist filename (w/o extension) of device under test.
#   tech   : technology to be used. A file called Technology.[tech].v must be present in 
#            this directory. Defaults to Technology.amust018.v
#   SR     : use this option if device implementation is single-rail, otherwise
#             a dual-rail implementation is asumed.
#  DUMPVARS n: Dump the values of all internal signals in dev.v (n is the dump level)
#
# Example: to run a verilog simulation of the single-rail device in MyDev.v 
#          with Balsa technology "example", use:
#     ./multiplier.sim DEV MyDev SR TECH example
# 
#     For this example, the following files must be present:
#     ./MyDev.v
#     ./Technology.example.v (which must include the correct verilog tech file)

HARNESS=test-multiplier.v
CMD=`basename $0`
USAGE="usage: ${CMD} [DEV dev] [SR] [TECH tech] [DUMPVARS n]"
ERROR="*** ${CMD}: "
## the output files are saved here, change this at your convenience
DIR=/tmp
echo "Using dir ${DIR} for output files"

if [ x$1 = x ]
then
  echo ${USAGE} 
  exit 1
fi

if [ ! -f ${HARNESS} ]
then
  echo "${ERROR} Can't open ${HARNESS}"
  exit 1
fi

#default device
DEV=mult

while [ x$1 != x ]
do
  case $1 in
    DEV)
		shift
		DEV=$1;;
    SR)
		SR=true
		OPT1=_SR;;
    TECH)
		shift
        TFILE=$1
		OPT2=_TECH_$1;;
    NRESET)
		NRESET=true
		OPT3=_NRESET;;
    RESET)
		RESET=true
		OPT4=_RESET;;
    SPACER)
		shift
		SPACER=$1
		if [ x$1 = x0 ]
		then
			OPT5=_No
		elif [ x$1 != x1 ]
		then
			echo ${USAGE}
			exit 1
		fi
		OPT5=${OPT5}_Spacer;;
    DUMPVARS)
		shift
		DUMPVARS=$1
  esac
  shift
done
OPT=VCS${OPT1}${OPT2}${OPT3}${OPT4}${OPT5}
NAME=${DEV}_${OPT}_${TEST}
TESTFILE=test-${NAME}.v
echo "\`define DUMPFILE \"${DIR}/${NAME}.vcd\"" > ${TESTFILE}
echo "\`define TUBEFILE \"${DIR}/${NAME}.tube\"" >> ${TESTFILE}
echo "\`define NLSTFILE \"${DEV}.v\"" >> ${TESTFILE}
if [ ${SR} ]
then
  echo "\`define SR true" >> ${TESTFILE}
fi
if [ x${TFILE} != x ]
then
  echo "\`define TECHFILE \"Technology.${TFILE}.v\"" >> ${TESTFILE}
fi
if [ x${NRESET} != x ]
then
  echo "\`define NRESET true" >> ${TESTFILE}
fi
if [ x${RESET} != x ]
then
  echo "\`define RESET true" >> ${TESTFILE}
fi
if [ x${SPACER} != x ]
then
  echo "\`define SPACER ${SPACER}" >> ${TESTFILE}
fi
if [ x${DUMPVARS} != x ]
then
  echo "\`define DUMPVARS ${DUMPVARS}" >> ${TESTFILE}
fi
cat ${HARNESS} >> ${TESTFILE}
vcs +v2k -o ${DIR}/${NAME} ${TESTFILE} 
if [ -f ${DIR}/${NAME} ]
then
  ${DIR}/${NAME} -l ${DIR}/${NAME}.log
fi
\rm -f ${TESTFILE}
\rm -f ${DIR}/${NAME}
